import { Cell, CellContextType } from '../types/PublicModel';
import { StickyOffsets } from '../types/InternalModel';

interface CellContextProviderProps {
    rowIndex: number;
    colIndex: number;
    realRowIndex: number;
    realColumnIndex: number;
    cell: Cell;
    isSelected: boolean;
    isFocused: boolean;
    rowSpan?: number;
    colSpan?: number;
    getCellOffset: (rowIdx: number, colIdx: number, rowSpan: number, colSpan: number) => React.CSSProperties;
    shouldRenderReorderedCells: boolean;
    stickyOffsets?: StickyOffsets;
    cellStyles?: React.CSSProperties;
}
export declare const CellContext: import('react').Context<CellContextType>;
export declare const useCellContext: () => CellContextType;
export declare const CellContextProvider: import('react').MemoExoticComponent<({ rowIndex, colIndex, realRowIndex, realColumnIndex, rowSpan, colSpan, getCellOffset, cell, isSelected, isFocused, }: CellContextProviderProps) => import("@emotion/react/jsx-runtime").JSX.Element>;
export {};
