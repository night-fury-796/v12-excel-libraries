import { FocusedCell, IndexedLocation, PaneName, SpanMember } from '../types/InternalModel.ts';
import { Cell, CellsLookup, Column, NumericalRange, Row } from '../types/PublicModel.ts';

/**
 * Interface for the ReactGrid API.
 */
export interface ReactGridAPI {
    setSelectedArea: (range: NumericalRange) => void;
    setFocusedCell: ({ rowIndex, colIndex }: IndexedLocation) => void;
    setSelectedColumns: (startColIdx: number, endColIdx: number) => void;
    setSelectedRows: (startRowIdx: number, endRowIdx: number) => void;
    getFocusedCell: () => FocusedCell | null;
    getCellByIndexes: (rowIndex: number, colIndex: number) => Cell | null;
    getCellOrSpanMemberByIndexes: (rowIndex: number, colIndex: number) => Cell | SpanMember | null;
    getPaneRanges: () => Record<PaneName, NumericalRange>;
    getCellsLookup: () => CellsLookup;
    getSelectedArea: () => NumericalRange | null;
    getColumns: () => Column[];
    getRows: () => Row[];
}
/**
 * Hook that provides access to the ReactGrid API.
 * @param id - The ID of the ReactGrid instance.
 * @returns An object containing setters and getters for interacting with the ReactGrid.
 */
export declare function useReactGridAPI(id: string): ReactGridAPI | undefined;
