import { CellMatrix } from '../types/CellMatrix';
import { Cell, Column, Row } from '../types/PublicModel';

type SetCellFn = <TComponent extends React.ComponentType<any>>(rowIndex: number, colIndex: number, Template: TComponent, props?: React.ComponentPropsWithRef<TComponent>, { ...args }?: Omit<Cell, "rowIndex" | "colIndex" | "Template" | "props">) => void;
interface CellMatrixBuilderTools {
    setCell: SetCellFn;
}
/**
 * Utility which helps you build your cell matrix in easy and type-safe way.
 * _You don't really have to use this if you don't need type safety
 * as long as you **keep proper structure** of your cellMatrix._
 *
 * It's `setCell` method infers the `props` type based on the provided `Template`
 * so that you don't have to specify it manually.
 *
 * @param builder Function which receives {@link CellMatrixBuilderTools} as an argument and is used to build your cell matrix
 * @returns cells
 */
export declare const cellMatrixBuilder: (rows: Row[] | undefined, columns: Column[] | undefined, builder: ({ ...tools }: CellMatrixBuilderTools) => void) => CellMatrix;
export {};
